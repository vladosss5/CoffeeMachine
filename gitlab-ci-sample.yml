default:
  tags:
    - testqwerty
    

    
  cache: &global_cache
    key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
    paths:
      - '$WEB_PATH/project.assets.json'
      - '$WEB_PATH/*.csproj.nuget.*'
      - '$UNIT_TESTS_PATH/project.assets.json'
      - '$UNIT_TESTS_PATH/*.csproj.nuget.*'
      - '$INTEGRATION_TESTS_PATH/project.assets.json'
      - '$INTEGRATION_TESTS_PATH/*.csproj.nuget.*'
      - '$NUGET_PACKAGES_DIRECTORY'
    policy: pull-push

variables:
    NUGET_PACKAGES_DIRECTORY: '.nuget'
    WEB_PATH: 'Web/obj'
    UNIT_TESTS_PATH: 'Tests/UnitTests/obj'
    INTEGRATION_TESTS_PATH: 'Tests/IntegrationTests/obj'

stages:
  - test
  - build
  - publish
  - deploy

integrationstests:
  cache:
    <<: *global_cache
  stage: test
  image: docker:24.0.5
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  services:
    - docker:24.0.5-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY    
    - docker build --pull -f keycloak/Dockerfile -t $CI_REGISTRY_IMAGE:keycloak_curl .
    - docker push $CI_REGISTRY_IMAGE:keycloak_curl
    - docker-compose -f docker-compose-tests.yml up --abort-on-container-exit --exit-code-from integrationtests

unittests:
  cache:
    <<: *global_cache
  stage: test
  image: registry.tomskasu.ru/devops/dockerify/dotnetsdk:8.0
  script:
    - dotnet restore Tests/UnitTests/UnitTests.csproj --packages $NUGET_PACKAGES_DIRECTORY
    - dotnet test Tests/UnitTests/UnitTests.csproj --no-restore

build:
  cache:
    <<: *global_cache
    policy: pull
  stage: build
  image: registry.tomskasu.ru/devops/dockerify/dotnetsdk:8.0
  script:
    - dotnet restore Web/Web.csproj --packages $NUGET_PACKAGES_DIRECTORY
    - dotnet build Web/Web.csproj -c Release --no-restore
    - dotnet publish Web/Web.csproj -c Release --no-build --output ./app
  artifacts:
    expire_in: 1 hour
    paths:
      - ./app/
  needs:
    - unittests
    - integrationstests
  dependencies:
    - unittests
    - integrationstests

publish:
  cache:
    <<: *global_cache
    policy: pull
  stage: publish
  image: docker:24.0.5
  services:
      - docker:24.0.5-dind
  before_script:
      - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY    
      - |
          echo -e '
          FROM registry.tomskasu.ru/devops/dockerify/dotnetsdk:8.0
          WORKDIR /app
          COPY ./app .
          ENTRYPOINT ["dotnet", "Web.dll"]
          ' > Dockerfile
  script:
      - docker build --pull -f Dockerfile -t $CI_REGISTRY_IMAGE:latest .
      - docker push $CI_REGISTRY_IMAGE:latest
  dependencies:
      - build
  needs:
      - build
  
deploy:
  cache:
    <<: *global_cache
    policy: pull
  stage: deploy
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
      - docker-compose -f docker-compose.yml up -d
  dependencies:
      - publish
  needs:
      - publish
